// Parameters

func u0 = x*(1.-x)*y*(1.-y);
real dt = 0.1;
real mu = 0.2;
real T = 1.;
 
// Mesh

border C1(t = 0., 1.){x = t; y = 0;}
border C2(t = 0., 1.){x = 1; y = t;}
border C3(t = 0., 1.){x = 1-t; y = 1;}
border C4(t = 0., 1.){x = 0; y = 1-t;}


mesh Th = buildmesh(C1(20)+C2(20)+C3(20)+C4(20));


// Fespace
fespace Vh(Th, P1);
 Vh u=u0, v, uold, f;
 
// Problem
problem dHeat (u, v)
   = int2d(Th)(
          u*v
        + dt*mu*(dx(u)*dx(v) + dy(u)*dy(v))
    )
    + int2d(Th)(
        - uold*v
        - dt*f*v
    )
    + on(1,2,3, 4, u=0)
    ;

// Time loop

//ofstream ff("data.txt");
real t = 0;
for(int m=0; m<=T/dt; m++){
    // Update
    t=t+dt;
    f = -2.*u0+2.*mu*(y*(1.-y)+x*(1.-x))*exp(-2.*t);
    func usol = u0*exp(-2.*t);
    uold = u;

    // Solve
    dHeat;

    // Plot
    //plot(u);
    //ff << t << sqrt(int2d(Th)((u-usol)^2));
    cout << "t=" << t << " - L^2-Error=" << sqrt(int2d(Th)((u-usol)^2)) << endl;
    }



